# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: 
      - 'develop'
      - 'release'
  pull_request:
    branches: 
      - 'main'
      - 'develop'
      - 'release'

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
    
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
        
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: CheckStyleMain with Gradle
        run: ./gradlew checkstyleMain
      
      - name: CheckStyleTest with Gradle
        run: ./gradlew checkstyleTest
        
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        if: ${{ always() }}
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Test with Gradle # test application build
      run: ./gradlew test

    - name: Publish Unit Test Results # test 후 result를 보기 위해 추가
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always() # test가 실패해도 report를 남기기 위해 설정
      with:
        files: build/test-results/**/*.xml
        
    - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      if: ${{ always() }}
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Build with Gradle # 실제 application build(-x 옵션을 통해 test는 제외)
      run: ./gradlew build -x test
      
  notification:
    needs: [checkstyle, test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Failure Actions for Discord
        if: ${{ needs.checkstyle.result == 'failure' || needs.test.result == 'failure' || needs.build.result == 'failure' }}
        # You may pin to the exact commit or the version.
        # uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        env:
          DISCORD_WEBHOOK : ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0.3.2
        with:
        # The message to display in the Discord message.
          args: "❌ ${{ github.repository }}의 ${{ github.event_name }}내용 확인이 필요합니다.\n ✏ check code style : ${{needs.checkstyle.result}} \n 🛠 test : ${{needs.test.result}}\n 📃 build : ${{needs.build.result}}"
          
      - name: Success Actions for Discord
        if: ${{ needs.checkstyle.result == 'success' && needs.test.result == 'success' && needs.build.result == 'success' }}
        # You may pin to the exact commit or the version.
        # uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        env:
          DISCORD_WEBHOOK : ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS : |
            "[{
                "title": "❌ [${{ github.repository }}](${{github.repository}})의 ${{ github.event_name }}내용 확인이 필요합니다.",
                "color": 14177041,
                "description": "✏ **check code style** : ${{needs.checkstyle.result}} \n 🛠 **test** : ${{needs.test.result}}\n 📃 **build** : ${{needs.build.result}}"
            }]"
        uses: Ilshidur/action-discord@0.3.2
